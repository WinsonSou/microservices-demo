# Pod Disruption Budgets for all microservices
# Ensures high availability during cluster maintenance and updates
---
# Critical services - require at least 2 replicas available
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: frontend-pdb
  namespace: microservices-demo
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: frontend
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cartservice-pdb
  namespace: microservices-demo
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: cartservice
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: checkoutservice-pdb
  namespace: microservices-demo
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: checkoutservice
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: productcatalogservice-pdb
  namespace: microservices-demo
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: productcatalogservice
---
# Standard services - require at least 1 replica available
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: emailservice-pdb
  namespace: microservices-demo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: emailservice
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: recommendationservice-pdb
  namespace: microservices-demo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: recommendationservice
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: paymentservice-pdb
  namespace: microservices-demo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: paymentservice
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: currencyservice-pdb
  namespace: microservices-demo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: currencyservice
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: shippingservice-pdb
  namespace: microservices-demo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: shippingservice
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: adservice-pdb
  namespace: microservices-demo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: adservice
---
# Load generator - optional, can tolerate full disruption
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: loadgenerator-pdb
  namespace: microservices-demo
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: loadgenerator